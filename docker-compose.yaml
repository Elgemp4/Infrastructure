services:
  bind9:
    container_name: bind-dns
    image: ubuntu/bind9:latest
    environment:
      - BIND9_USER=root
      - TZ=America/New_York
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    volumes:
      - ./data/dns/config:/etc/bind
      - ./data/dns/cache:/var/cache/bind
      - ./data/dns/records:/var/lib/bind
    restart: unless-stopped
    networks:
      gitea-net:
        ipv4_address: 172.25.0.10
  updater:
    # Use a build context to build the image from the Dockerfile
    build:
      context: ./auto-updater
    container_name: gitea-image-updater
    restart: unless-stopped
    # Mount the Docker socket from the host. This is CRITICAL for the script to control the host's Docker daemon.
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # It's also critical to mount the docker config for registry authentication
      - ~/.docker/config.json:/root/.docker/config.json:ro
    # Pass environment variables to the container
    environment:
      # You must replace these values with your own
      - GITEA_REGISTRY=gitea.elgem.be
      - SLEEP_INTERVAL=5
    networks:
      - gitea-net
  # A service that will periodically check for new images versions in the local private docker registry and deploy them if needed
  #  watchtower:
  #    image: containrrr/watchtower
  #    restart: always
  #    volumes:
  #      - /var/run/docker.sock:/var/run/docker.sock
  #      - ~/.docker/config.json:/config.json:ro
  #    environment:
  #      - DOCKER_CONFIG=/config.json
  #    command: --interval 30 --cleanup=true # The intervals in second at which watch tower will check for updates
  #    dns: 172.25.0.10
  #    networks:
  #      - gitea-net
  # MariaDB Server for services & competitors databases
  db:
    image: mariadb:10.11
    restart: always
    ports:
      - 3306:3306
    volumes:
      - ./data/mariadb_data:/var/lib/mysql
    dns: 172.25.0.10
    environment:
      MYSQL_ROOT_PASSWORD: root
    networks:
      - gitea-net
  # Web interface for interacting with MariaDB server
  phpmyadmin:
    image: phpmyadmin
    restart: always
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_ARBITRARY: 0
    networks:
      - gitea-net
  #  portainer:
  #    image: portainer/portainer-ce
  #    container_name: portainer
  #    restart: always
  #    dns: 172.25.0.10
  #    volumes:
  #      - "/var/run/docker.sock:/var/run/docker.sock"
  #      - "./data/portainer:/data"
  #    networks:
  #      - gitea-net
  # A machine wide reverse proxy for host reserve proxy reversing
  general-reverse-proxy:
    image: nginx:alpine
    container_name: reverse-proxy
    dns: 172.25.0.10
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/nginx/conf.d:/etc/nginx/conf.d
      - ./data/nginx/ssl/:/etc/nginx/ssl/
      - ./data/nginx/certs:/etc/nginx/certs
      - ./data/nginx/html:/usr/share/nginx/html
      - ./data/nginx/logs:/var/log/nginx
    networks:
      - gitea-net
    depends_on:
      - phpmyadmin
  # The gitea service (equivalent of local github)
  gitea:
    image: docker.gitea.com/gitea:1.24.3
    container_name: gitea
    dns: 172.25.0.10
    environment:
      - USER_UID=1000
      - USER_GID=1000
    restart: always
    networks:
      - gitea-net
    volumes:
      - ./data/gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "22:22"
  # The runner for gitea action allowing for the CI/CD pipelines to work
  runner:
    image: docker.io/gitea/act_runner:nightly
    restart: unless-stopped
    dns: 172.25.0.10
    environment:
      CONFIG_FILE: /data/config.yaml
      GITEA_INSTANCE_URL: "https://gitea.elgem.be"
      GITEA_RUNNER_REGISTRATION_TOKEN: "Owz34saMQ6ocCpv1jbz1gWLiMFPK1KoCryOxhjO0"
      GITEA_RUNNER_NAME: "Gitea Act Runner"
      GITEA_RUNNER_LABELS: ""
    volumes:
      - ./data/gitea-runner:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - gitea-net
    depends_on:
      - gitea
      - general-reverse-proxy

networks:
  gitea-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
